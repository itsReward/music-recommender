{"ast":null,"code":"var _jsxFileName = \"/home/zeus/Development/music-recommender/client/src/pages/Recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport SongCard from '../components/SongCard';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [recommendations, setRecommendations] = useState({\n    content: [],\n    collaborative: [],\n    hybrid: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('hybrid');\n\n  // Synthetic song data\n  const mockSongs = {\n    // Pop Songs\n    pop1: {\n      _id: 'rec_pop1',\n      title: 'Watermelon Sugar',\n      artist: 'Harry Styles',\n      album: 'Fine Line',\n      year: 2019,\n      genres: ['Pop', 'R&B'],\n      duration: 174,\n      averageRating: 4.3,\n      ratingCount: 156\n    },\n    pop2: {\n      _id: 'rec_pop2',\n      title: 'Don\\'t Start Now',\n      artist: 'Dua Lipa',\n      album: 'Future Nostalgia',\n      year: 2020,\n      genres: ['Pop', 'Disco'],\n      duration: 183,\n      averageRating: 4.4,\n      ratingCount: 142\n    },\n    pop3: {\n      _id: 'rec_pop3',\n      title: 'Levitating',\n      artist: 'Dua Lipa ft. DaBaby',\n      album: 'Future Nostalgia',\n      year: 2020,\n      genres: ['Pop', 'Disco'],\n      duration: 203,\n      averageRating: 4.5,\n      ratingCount: 178\n    },\n    // Rock Songs\n    rock1: {\n      _id: 'rec_rock1',\n      title: 'Do I Wanna Know?',\n      artist: 'Arctic Monkeys',\n      album: 'AM',\n      year: 2013,\n      genres: ['Rock', 'Indie Rock'],\n      duration: 272,\n      averageRating: 4.7,\n      ratingCount: 203\n    },\n    rock2: {\n      _id: 'rec_rock2',\n      title: 'Everlong',\n      artist: 'Foo Fighters',\n      album: 'The Colour and the Shape',\n      year: 1997,\n      genres: ['Rock', 'Alternative Rock'],\n      duration: 250,\n      averageRating: 4.8,\n      ratingCount: 189\n    },\n    rock3: {\n      _id: 'rec_rock3',\n      title: 'Back In Black',\n      artist: 'AC/DC',\n      album: 'Back In Black',\n      year: 1980,\n      genres: ['Hard Rock', 'Rock'],\n      duration: 255,\n      averageRating: 4.9,\n      ratingCount: 231\n    },\n    // Electronic/Dance Songs\n    dance1: {\n      _id: 'rec_dance1',\n      title: 'Strobe',\n      artist: 'deadmau5',\n      album: 'For Lack of a Better Name',\n      year: 2009,\n      genres: ['Electronic', 'Progressive House'],\n      duration: 608,\n      averageRating: 4.6,\n      ratingCount: 167\n    },\n    dance2: {\n      _id: 'rec_dance2',\n      title: 'Opus',\n      artist: 'Eric Prydz',\n      album: 'Opus',\n      year: 2016,\n      genres: ['Progressive House', 'Electronic'],\n      duration: 562,\n      averageRating: 4.5,\n      ratingCount: 144\n    },\n    dance3: {\n      _id: 'rec_dance3',\n      title: 'Levels',\n      artist: 'Avicii',\n      album: 'True',\n      year: 2011,\n      genres: ['Electronic', 'EDM'],\n      duration: 210,\n      averageRating: 4.7,\n      ratingCount: 212\n    },\n    // Soul/R&B Songs\n    soul1: {\n      _id: 'rec_soul1',\n      title: 'Redbone',\n      artist: 'Childish Gambino',\n      album: 'Awaken, My Love!',\n      year: 2016,\n      genres: ['Soul', 'R&B', 'Funk'],\n      duration: 326,\n      averageRating: 4.6,\n      ratingCount: 198\n    },\n    soul2: {\n      _id: 'rec_soul2',\n      title: 'Cranes in the Sky',\n      artist: 'Solange',\n      album: 'A Seat at the Table',\n      year: 2016,\n      genres: ['R&B', 'Soul'],\n      duration: 251,\n      averageRating: 4.4,\n      ratingCount: 156\n    },\n    // Alternative/Indie Songs\n    indie1: {\n      _id: 'rec_indie1',\n      title: 'Take Me Out',\n      artist: 'Franz Ferdinand',\n      album: 'Franz Ferdinand',\n      year: 2004,\n      genres: ['Indie Rock', 'Alternative'],\n      duration: 237,\n      averageRating: 4.5,\n      ratingCount: 167\n    },\n    indie2: {\n      _id: 'rec_indie2',\n      title: 'Mr. Brightside',\n      artist: 'The Killers',\n      album: 'Hot Fuss',\n      year: 2004,\n      genres: ['Indie Rock', 'Alternative'],\n      duration: 222,\n      averageRating: 4.8,\n      ratingCount: 223\n    }\n  };\n  useEffect(() => {\n    // Simulate loading\n    setLoading(true);\n    setTimeout(() => {\n      // Generate recommendations based on user\n      let contentRecs = [];\n      let collaborativeRecs = [];\n      let hybridRecs = [];\n      if (user) {\n        switch (user.username) {\n          // John Doe - Pop/R&B fan\n          case 'john_doe':\n            contentRecs = [mockSongs.pop1, mockSongs.pop2, mockSongs.pop3, mockSongs.soul1, mockSongs.soul2];\n            collaborativeRecs = [mockSongs.pop3, mockSongs.indie2, mockSongs.pop1, mockSongs.soul1, mockSongs.rock1];\n            hybridRecs = [mockSongs.pop3, mockSongs.soul1, mockSongs.pop1, mockSongs.indie2, mockSongs.pop2, mockSongs.soul2];\n            break;\n\n          // Jane Smith - Dance/Electropop fan\n          case 'jane_smith':\n            contentRecs = [mockSongs.dance1, mockSongs.dance2, mockSongs.dance3, mockSongs.pop2, mockSongs.pop3];\n            collaborativeRecs = [mockSongs.dance3, mockSongs.pop2, mockSongs.indie1, mockSongs.dance1, mockSongs.indie2];\n            hybridRecs = [mockSongs.dance3, mockSongs.dance1, mockSongs.pop2, mockSongs.dance2, mockSongs.indie2, mockSongs.pop3];\n            break;\n\n          // Alex Rock - Rock music fan\n          case 'alex_rock':\n            contentRecs = [mockSongs.rock1, mockSongs.rock2, mockSongs.rock3, mockSongs.indie1, mockSongs.indie2];\n            collaborativeRecs = [mockSongs.rock2, mockSongs.indie2, mockSongs.indie1, mockSongs.rock3, mockSongs.rock1];\n            hybridRecs = [mockSongs.rock2, mockSongs.indie2, mockSongs.rock3, mockSongs.rock1, mockSongs.indie1, mockSongs.pop1];\n            break;\n          default:\n            // Generic recommendations for new users\n            contentRecs = [mockSongs.pop1, mockSongs.rock1, mockSongs.dance1, mockSongs.soul1, mockSongs.indie1];\n            collaborativeRecs = [mockSongs.pop3, mockSongs.indie2, mockSongs.rock2, mockSongs.dance3, mockSongs.soul2];\n            hybridRecs = [mockSongs.pop2, mockSongs.rock3, mockSongs.dance2, mockSongs.indie2, mockSongs.soul1, mockSongs.pop1];\n        }\n      } else {\n        // Default recommendations if no user (shouldn't happen due to Protected Route)\n        contentRecs = [mockSongs.pop1, mockSongs.rock1, mockSongs.dance1];\n        collaborativeRecs = [mockSongs.indie1, mockSongs.soul1, mockSongs.pop2];\n        hybridRecs = [mockSongs.pop1, mockSongs.indie2, mockSongs.rock2];\n      }\n      setRecommendations({\n        content: contentRecs,\n        collaborative: collaborativeRecs,\n        hybrid: hybridRecs\n      });\n      setLoading(false);\n    }, 1000); // Simulate network delay\n  }, [user]);\n  const handleRating = (songId, rating) => {\n    // Update recommendations after rating (just for UI feedback)\n    setRecommendations(prev => ({\n      content: prev.content.map(song => song._id === songId ? {\n        ...song,\n        userRating: rating\n      } : song),\n      collaborative: prev.collaborative.map(song => song._id === songId ? {\n        ...song,\n        userRating: rating\n      } : song),\n      hybrid: prev.hybrid.map(song => song._id === songId ? {\n        ...song,\n        userRating: rating\n      } : song)\n    }));\n  };\n  const renderTabContent = () => {\n    const currentRecommendations = recommendations[activeTab];\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 20\n      }, this);\n    }\n    if (currentRecommendations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-recommendations\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recommendations available yet. Try rating more songs to get better recommendations!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-grid\",\n      children: currentRecommendations.map(song => /*#__PURE__*/_jsxDEV(SongCard, {\n        song: song,\n        onRate: handleRating\n      }, song._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this);\n  };\n  const getExplanation = () => {\n    if (user) {\n      switch (user.username) {\n        case 'john_doe':\n          return \"Based on your preference for Pop and R&B music, and your high ratings for artists like Ed Sheeran and Michael Jackson.\";\n        case 'jane_smith':\n          return \"Based on your interest in Dance, Electropop, and your ratings for artists like The Weeknd and Billie Eilish.\";\n        case 'alex_rock':\n          return \"Based on your love for Rock music and your high ratings for artists like Eagles, Nirvana, and Led Zeppelin.\";\n        default:\n          return \"Based on your listening history and ratings.\";\n      }\n    }\n    return \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Personalized Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discover new music based on your taste and preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"personal-explanation\",\n        children: getExplanation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendation-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'hybrid' ? 'active' : ''}`,\n        onClick: () => setActiveTab('hybrid'),\n        children: \"Best For You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'content' ? 'active' : ''}`,\n        onClick: () => setActiveTab('content'),\n        children: \"Based on Song Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'collaborative' ? 'active' : ''}`,\n        onClick: () => setActiveTab('collaborative'),\n        children: \"Similar Listeners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-explanation\",\n      children: [activeTab === 'hybrid' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"These recommendations combine both content-based and collaborative filtering for the best results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }, this), activeTab === 'content' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"These songs are recommended based on the genres, artists, and audio features similar to your favorites.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }, this), activeTab === 'collaborative' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"These songs are recommended based on what other users with similar taste have enjoyed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"recommendations-container\",\n      children: renderTabContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 9\n  }, this);\n};\n_s(Recommendations, \"kgF4Bvo6lvZJdDKeUHyO2QCKV1g=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","useEffect","useContext","SongCard","AuthContext","jsxDEV","_jsxDEV","Recommendations","_s","user","recommendations","setRecommendations","content","collaborative","hybrid","loading","setLoading","activeTab","setActiveTab","mockSongs","pop1","_id","title","artist","album","year","genres","duration","averageRating","ratingCount","pop2","pop3","rock1","rock2","rock3","dance1","dance2","dance3","soul1","soul2","indie1","indie2","setTimeout","contentRecs","collaborativeRecs","hybridRecs","username","handleRating","songId","rating","prev","map","song","userRating","renderTabContent","currentRecommendations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onRate","getExplanation","onClick","_c","$RefreshReg$"],"sources":["/home/zeus/Development/music-recommender/client/src/pages/Recommendations.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport SongCard from '../components/SongCard';\nimport { AuthContext } from '../context/AuthContext';\n\nconst Recommendations = () => {\n    const { user } = useContext(AuthContext);\n    const [recommendations, setRecommendations] = useState({\n        content: [],\n        collaborative: [],\n        hybrid: []\n    });\n    const [loading, setLoading] = useState(true);\n    const [activeTab, setActiveTab] = useState('hybrid');\n\n    // Synthetic song data\n    const mockSongs = {\n        // Pop Songs\n        pop1: {\n            _id: 'rec_pop1',\n            title: 'Watermelon Sugar',\n            artist: 'Harry Styles',\n            album: 'Fine Line',\n            year: 2019,\n            genres: ['Pop', 'R&B'],\n            duration: 174,\n            averageRating: 4.3,\n            ratingCount: 156\n        },\n        pop2: {\n            _id: 'rec_pop2',\n            title: 'Don\\'t Start Now',\n            artist: 'Dua Lipa',\n            album: 'Future Nostalgia',\n            year: 2020,\n            genres: ['Pop', 'Disco'],\n            duration: 183,\n            averageRating: 4.4,\n            ratingCount: 142\n        },\n        pop3: {\n            _id: 'rec_pop3',\n            title: 'Levitating',\n            artist: 'Dua Lipa ft. DaBaby',\n            album: 'Future Nostalgia',\n            year: 2020,\n            genres: ['Pop', 'Disco'],\n            duration: 203,\n            averageRating: 4.5,\n            ratingCount: 178\n        },\n\n        // Rock Songs\n        rock1: {\n            _id: 'rec_rock1',\n            title: 'Do I Wanna Know?',\n            artist: 'Arctic Monkeys',\n            album: 'AM',\n            year: 2013,\n            genres: ['Rock', 'Indie Rock'],\n            duration: 272,\n            averageRating: 4.7,\n            ratingCount: 203\n        },\n        rock2: {\n            _id: 'rec_rock2',\n            title: 'Everlong',\n            artist: 'Foo Fighters',\n            album: 'The Colour and the Shape',\n            year: 1997,\n            genres: ['Rock', 'Alternative Rock'],\n            duration: 250,\n            averageRating: 4.8,\n            ratingCount: 189\n        },\n        rock3: {\n            _id: 'rec_rock3',\n            title: 'Back In Black',\n            artist: 'AC/DC',\n            album: 'Back In Black',\n            year: 1980,\n            genres: ['Hard Rock', 'Rock'],\n            duration: 255,\n            averageRating: 4.9,\n            ratingCount: 231\n        },\n\n        // Electronic/Dance Songs\n        dance1: {\n            _id: 'rec_dance1',\n            title: 'Strobe',\n            artist: 'deadmau5',\n            album: 'For Lack of a Better Name',\n            year: 2009,\n            genres: ['Electronic', 'Progressive House'],\n            duration: 608,\n            averageRating: 4.6,\n            ratingCount: 167\n        },\n        dance2: {\n            _id: 'rec_dance2',\n            title: 'Opus',\n            artist: 'Eric Prydz',\n            album: 'Opus',\n            year: 2016,\n            genres: ['Progressive House', 'Electronic'],\n            duration: 562,\n            averageRating: 4.5,\n            ratingCount: 144\n        },\n        dance3: {\n            _id: 'rec_dance3',\n            title: 'Levels',\n            artist: 'Avicii',\n            album: 'True',\n            year: 2011,\n            genres: ['Electronic', 'EDM'],\n            duration: 210,\n            averageRating: 4.7,\n            ratingCount: 212\n        },\n\n        // Soul/R&B Songs\n        soul1: {\n            _id: 'rec_soul1',\n            title: 'Redbone',\n            artist: 'Childish Gambino',\n            album: 'Awaken, My Love!',\n            year: 2016,\n            genres: ['Soul', 'R&B', 'Funk'],\n            duration: 326,\n            averageRating: 4.6,\n            ratingCount: 198\n        },\n        soul2: {\n            _id: 'rec_soul2',\n            title: 'Cranes in the Sky',\n            artist: 'Solange',\n            album: 'A Seat at the Table',\n            year: 2016,\n            genres: ['R&B', 'Soul'],\n            duration: 251,\n            averageRating: 4.4,\n            ratingCount: 156\n        },\n\n        // Alternative/Indie Songs\n        indie1: {\n            _id: 'rec_indie1',\n            title: 'Take Me Out',\n            artist: 'Franz Ferdinand',\n            album: 'Franz Ferdinand',\n            year: 2004,\n            genres: ['Indie Rock', 'Alternative'],\n            duration: 237,\n            averageRating: 4.5,\n            ratingCount: 167\n        },\n        indie2: {\n            _id: 'rec_indie2',\n            title: 'Mr. Brightside',\n            artist: 'The Killers',\n            album: 'Hot Fuss',\n            year: 2004,\n            genres: ['Indie Rock', 'Alternative'],\n            duration: 222,\n            averageRating: 4.8,\n            ratingCount: 223\n        }\n    };\n\n    useEffect(() => {\n        // Simulate loading\n        setLoading(true);\n\n        setTimeout(() => {\n            // Generate recommendations based on user\n            let contentRecs = [];\n            let collaborativeRecs = [];\n            let hybridRecs = [];\n\n            if (user) {\n                switch(user.username) {\n                    // John Doe - Pop/R&B fan\n                    case 'john_doe':\n                        contentRecs = [\n                            mockSongs.pop1,\n                            mockSongs.pop2,\n                            mockSongs.pop3,\n                            mockSongs.soul1,\n                            mockSongs.soul2\n                        ];\n                        collaborativeRecs = [\n                            mockSongs.pop3,\n                            mockSongs.indie2,\n                            mockSongs.pop1,\n                            mockSongs.soul1,\n                            mockSongs.rock1\n                        ];\n                        hybridRecs = [\n                            mockSongs.pop3,\n                            mockSongs.soul1,\n                            mockSongs.pop1,\n                            mockSongs.indie2,\n                            mockSongs.pop2,\n                            mockSongs.soul2\n                        ];\n                        break;\n\n                    // Jane Smith - Dance/Electropop fan\n                    case 'jane_smith':\n                        contentRecs = [\n                            mockSongs.dance1,\n                            mockSongs.dance2,\n                            mockSongs.dance3,\n                            mockSongs.pop2,\n                            mockSongs.pop3\n                        ];\n                        collaborativeRecs = [\n                            mockSongs.dance3,\n                            mockSongs.pop2,\n                            mockSongs.indie1,\n                            mockSongs.dance1,\n                            mockSongs.indie2\n                        ];\n                        hybridRecs = [\n                            mockSongs.dance3,\n                            mockSongs.dance1,\n                            mockSongs.pop2,\n                            mockSongs.dance2,\n                            mockSongs.indie2,\n                            mockSongs.pop3\n                        ];\n                        break;\n\n                    // Alex Rock - Rock music fan\n                    case 'alex_rock':\n                        contentRecs = [\n                            mockSongs.rock1,\n                            mockSongs.rock2,\n                            mockSongs.rock3,\n                            mockSongs.indie1,\n                            mockSongs.indie2\n                        ];\n                        collaborativeRecs = [\n                            mockSongs.rock2,\n                            mockSongs.indie2,\n                            mockSongs.indie1,\n                            mockSongs.rock3,\n                            mockSongs.rock1\n                        ];\n                        hybridRecs = [\n                            mockSongs.rock2,\n                            mockSongs.indie2,\n                            mockSongs.rock3,\n                            mockSongs.rock1,\n                            mockSongs.indie1,\n                            mockSongs.pop1\n                        ];\n                        break;\n\n                    default:\n                        // Generic recommendations for new users\n                        contentRecs = [\n                            mockSongs.pop1,\n                            mockSongs.rock1,\n                            mockSongs.dance1,\n                            mockSongs.soul1,\n                            mockSongs.indie1\n                        ];\n                        collaborativeRecs = [\n                            mockSongs.pop3,\n                            mockSongs.indie2,\n                            mockSongs.rock2,\n                            mockSongs.dance3,\n                            mockSongs.soul2\n                        ];\n                        hybridRecs = [\n                            mockSongs.pop2,\n                            mockSongs.rock3,\n                            mockSongs.dance2,\n                            mockSongs.indie2,\n                            mockSongs.soul1,\n                            mockSongs.pop1\n                        ];\n                }\n            } else {\n                // Default recommendations if no user (shouldn't happen due to Protected Route)\n                contentRecs = [mockSongs.pop1, mockSongs.rock1, mockSongs.dance1];\n                collaborativeRecs = [mockSongs.indie1, mockSongs.soul1, mockSongs.pop2];\n                hybridRecs = [mockSongs.pop1, mockSongs.indie2, mockSongs.rock2];\n            }\n\n            setRecommendations({\n                content: contentRecs,\n                collaborative: collaborativeRecs,\n                hybrid: hybridRecs\n            });\n\n            setLoading(false);\n        }, 1000); // Simulate network delay\n    }, [user]);\n\n    const handleRating = (songId, rating) => {\n        // Update recommendations after rating (just for UI feedback)\n        setRecommendations(prev => ({\n            content: prev.content.map(song =>\n                song._id === songId ? { ...song, userRating: rating } : song\n            ),\n            collaborative: prev.collaborative.map(song =>\n                song._id === songId ? { ...song, userRating: rating } : song\n            ),\n            hybrid: prev.hybrid.map(song =>\n                song._id === songId ? { ...song, userRating: rating } : song\n            )\n        }));\n    };\n\n    const renderTabContent = () => {\n        const currentRecommendations = recommendations[activeTab];\n\n        if (loading) {\n            return <div className=\"loading\">Loading recommendations...</div>;\n        }\n\n        if (currentRecommendations.length === 0) {\n            return (\n                <div className=\"no-recommendations\">\n                    <p>No recommendations available yet. Try rating more songs to get better recommendations!</p>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"song-grid\">\n                {currentRecommendations.map(song => (\n                    <SongCard\n                        key={song._id}\n                        song={song}\n                        onRate={handleRating}\n                    />\n                ))}\n            </div>\n        );\n    };\n\n    const getExplanation = () => {\n        if (user) {\n            switch(user.username) {\n                case 'john_doe':\n                    return \"Based on your preference for Pop and R&B music, and your high ratings for artists like Ed Sheeran and Michael Jackson.\";\n                case 'jane_smith':\n                    return \"Based on your interest in Dance, Electropop, and your ratings for artists like The Weeknd and Billie Eilish.\";\n                case 'alex_rock':\n                    return \"Based on your love for Rock music and your high ratings for artists like Eagles, Nirvana, and Led Zeppelin.\";\n                default:\n                    return \"Based on your listening history and ratings.\";\n            }\n        }\n        return \"\";\n    };\n\n    return (\n        <div className=\"recommendations-page\">\n            <div className=\"recommendations-header\">\n                <h2>Your Personalized Recommendations</h2>\n                <p>Discover new music based on your taste and preferences</p>\n                <p className=\"personal-explanation\">{getExplanation()}</p>\n            </div>\n\n            <div className=\"recommendation-tabs\">\n                <button\n                    className={`tab ${activeTab === 'hybrid' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('hybrid')}\n                >\n                    Best For You\n                </button>\n                <button\n                    className={`tab ${activeTab === 'content' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('content')}\n                >\n                    Based on Song Features\n                </button>\n                <button\n                    className={`tab ${activeTab === 'collaborative' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('collaborative')}\n                >\n                    Similar Listeners\n                </button>\n            </div>\n\n            <div className=\"tab-explanation\">\n                {activeTab === 'hybrid' && (\n                    <p>These recommendations combine both content-based and collaborative filtering for the best results.</p>\n                )}\n                {activeTab === 'content' && (\n                    <p>These songs are recommended based on the genres, artists, and audio features similar to your favorites.</p>\n                )}\n                {activeTab === 'collaborative' && (\n                    <p>These songs are recommended based on what other users with similar taste have enjoyed.</p>\n                )}\n            </div>\n\n            <section className=\"recommendations-container\">\n                {renderTabContent()}\n            </section>\n        </div>\n    );\n};\n\nexport default Recommendations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}