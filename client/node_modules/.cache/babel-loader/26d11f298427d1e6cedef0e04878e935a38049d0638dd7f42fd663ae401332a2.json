{"ast":null,"code":"var _jsxFileName = \"/home/zeus/Development/music-recommender/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Set up axios defaults\n  axios.defaults.baseURL = 'http://localhost:5000';\n\n  // Set auth token for all requests if available\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Load user from token on initial load\n  useEffect(() => {\n    const loadUser = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const res = await axios.get('/api/users/profile');\n        setUser(res.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error loading user:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n        // Token is invalid or expired\n        logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, [token]);\n\n  // Register user\n  const register = async userData => {\n    try {\n      setError(null);\n      const res = await axios.post('/api/users/register', userData);\n\n      // Set token and user\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      return true;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'An error occurred during registration');\n      return false;\n    }\n  };\n\n  // Login user\n  // Mock login function for testing without backend\n  const login = async userData => {\n    try {\n      setError(null);\n\n      // Check if username and password match mock data\n      if ((userData.username === 'john_doe' || userData.username === 'jane_smith' || userData.username === 'alex_rock') && userData.password === 'password123') {\n        // Create mock user data\n        const mockUser = {\n          id: userData.username === 'john_doe' ? 'user_1' : userData.username === 'jane_smith' ? 'user_2' : 'user_3',\n          username: userData.username,\n          email: `${userData.username.split('_').join('.')}@example.com`\n        };\n\n        // Create mock token\n        const mockToken = 'mock_token_' + Date.now();\n\n        // Set token and user\n        localStorage.setItem('token', mockToken);\n        setToken(mockToken);\n        setUser(mockUser);\n        return true;\n      } else {\n        setError('Invalid credentials');\n        return false;\n      }\n    } catch (err) {\n      setError('An error occurred during login');\n      return false;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Clear state\n    setToken(null);\n    setUser(null);\n    setError(null);\n  };\n\n  // Rate a song\n  const rateSong = async (songId, rating) => {\n    try {\n      await axios.post('/api/users/rate', {\n        songId,\n        rating\n      });\n      return true;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Error rating song:', ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message);\n      return false;\n    }\n  };\n\n  // Add a song to favorites\n  const addToFavorites = async songId => {\n    try {\n      await axios.post('/api/users/favorites', {\n        songId\n      });\n\n      // Update user profile to reflect changes\n      const res = await axios.get('/api/users/profile');\n      setUser(res.data);\n      return true;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Error adding to favorites:', ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message);\n      return false;\n    }\n  };\n\n  // Clear any errors\n  const clearError = () => setError(null);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      rateSong,\n      addToFavorites,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"LlR46hZmk7KX+53ZAQDug201Pmw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","defaults","baseURL","headers","common","loadUser","res","get","data","err","_err$response","_err$response$data","console","response","message","logout","register","userData","post","setItem","_err$response2","_err$response2$data","login","username","password","mockUser","id","email","split","join","mockToken","Date","now","removeItem","rateSong","songId","rating","_err$response3","_err$response3$data","addToFavorites","_err$response4","_err$response4$data","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/zeus/Development/music-recommender/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [token, setToken] = useState(localStorage.getItem('token') || null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Set up axios defaults\n    axios.defaults.baseURL = 'http://localhost:5000';\n\n    // Set auth token for all requests if available\n    useEffect(() => {\n        if (token) {\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        } else {\n            delete axios.defaults.headers.common['Authorization'];\n        }\n    }, [token]);\n\n    // Load user from token on initial load\n    useEffect(() => {\n        const loadUser = async () => {\n            if (!token) {\n                setLoading(false);\n                return;\n            }\n\n            try {\n                const res = await axios.get('/api/users/profile');\n                setUser(res.data);\n            } catch (err) {\n                console.error('Error loading user:', err.response?.data?.message || err.message);\n                // Token is invalid or expired\n                logout();\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadUser();\n    }, [token]);\n\n    // Register user\n    const register = async (userData) => {\n        try {\n            setError(null);\n            const res = await axios.post('/api/users/register', userData);\n\n            // Set token and user\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            setToken(token);\n            setUser(user);\n\n            return true;\n        } catch (err) {\n            setError(err.response?.data?.message || 'An error occurred during registration');\n            return false;\n        }\n    };\n\n    // Login user\n    // Mock login function for testing without backend\n    const login = async (userData) => {\n        try {\n            setError(null);\n\n            // Check if username and password match mock data\n            if ((userData.username === 'john_doe' ||\n                    userData.username === 'jane_smith' ||\n                    userData.username === 'alex_rock') &&\n                userData.password === 'password123') {\n\n                // Create mock user data\n                const mockUser = {\n                    id: userData.username === 'john_doe' ? 'user_1' :\n                        userData.username === 'jane_smith' ? 'user_2' : 'user_3',\n                    username: userData.username,\n                    email: `${userData.username.split('_').join('.')}@example.com`\n                };\n\n                // Create mock token\n                const mockToken = 'mock_token_' + Date.now();\n\n                // Set token and user\n                localStorage.setItem('token', mockToken);\n                setToken(mockToken);\n                setUser(mockUser);\n\n                return true;\n            } else {\n                setError('Invalid credentials');\n                return false;\n            }\n        } catch (err) {\n            setError('An error occurred during login');\n            return false;\n        }\n    };\n\n    // Logout user\n    const logout = () => {\n        // Remove token from localStorage\n        localStorage.removeItem('token');\n\n        // Clear state\n        setToken(null);\n        setUser(null);\n        setError(null);\n    };\n\n    // Rate a song\n    const rateSong = async (songId, rating) => {\n        try {\n            await axios.post('/api/users/rate', { songId, rating });\n            return true;\n        } catch (err) {\n            console.error('Error rating song:', err.response?.data?.message || err.message);\n            return false;\n        }\n    };\n\n    // Add a song to favorites\n    const addToFavorites = async (songId) => {\n        try {\n            await axios.post('/api/users/favorites', { songId });\n\n            // Update user profile to reflect changes\n            const res = await axios.get('/api/users/profile');\n            setUser(res.data);\n\n            return true;\n        } catch (err) {\n            console.error('Error adding to favorites:', err.response?.data?.message || err.message);\n            return false;\n        }\n    };\n\n    // Clear any errors\n    const clearError = () => setError(null);\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                user,\n                loading,\n                error,\n                register,\n                login,\n                logout,\n                rateSong,\n                addToFavorites,\n                clearError\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EACzE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAE,KAAK,CAACiB,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;EAEhD;EACAnB,SAAS,CAAC,MAAM;IACZ,IAAIU,KAAK,EAAE;MACPT,KAAK,CAACiB,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUX,KAAK,EAAE;IACtE,CAAC,MAAM;MACH,OAAOT,KAAK,CAACiB,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACzD;EACJ,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;;EAEX;EACAV,SAAS,CAAC,MAAM;IACZ,MAAMsB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI,CAACZ,KAAK,EAAE;QACRK,UAAU,CAAC,KAAK,CAAC;QACjB;MACJ;MAEA,IAAI;QACA,MAAMQ,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,oBAAoB,CAAC;QACjDf,OAAO,CAACc,GAAG,CAACE,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACVC,OAAO,CAACb,KAAK,CAAC,qBAAqB,EAAE,EAAAW,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAIL,GAAG,CAACK,OAAO,CAAC;QAChF;QACAC,MAAM,CAAC,CAAC;MACZ,CAAC,SAAS;QACNjB,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDO,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMuB,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACjC,IAAI;MACAjB,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMM,GAAG,GAAG,MAAMtB,KAAK,CAACkC,IAAI,CAAC,qBAAqB,EAAED,QAAQ,CAAC;;MAE7D;MACA,MAAM;QAAExB,KAAK;QAAEF;MAAK,CAAC,GAAGe,GAAG,CAACE,IAAI;MAChCb,YAAY,CAACwB,OAAO,CAAC,OAAO,EAAE1B,KAAK,CAAC;MACpCC,QAAQ,CAACD,KAAK,CAAC;MACfD,OAAO,CAACD,IAAI,CAAC;MAEb,OAAO,IAAI;IACf,CAAC,CAAC,OAAOkB,GAAG,EAAE;MAAA,IAAAW,cAAA,EAAAC,mBAAA;MACVrB,QAAQ,CAAC,EAAAoB,cAAA,GAAAX,GAAG,CAACI,QAAQ,cAAAO,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcZ,IAAI,cAAAa,mBAAA,uBAAlBA,mBAAA,CAAoBP,OAAO,KAAI,uCAAuC,CAAC;MAChF,OAAO,KAAK;IAChB;EACJ,CAAC;;EAED;EACA;EACA,MAAMQ,KAAK,GAAG,MAAOL,QAAQ,IAAK;IAC9B,IAAI;MACAjB,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,IAAI,CAACiB,QAAQ,CAACM,QAAQ,KAAK,UAAU,IAC7BN,QAAQ,CAACM,QAAQ,KAAK,YAAY,IAClCN,QAAQ,CAACM,QAAQ,KAAK,WAAW,KACrCN,QAAQ,CAACO,QAAQ,KAAK,aAAa,EAAE;QAErC;QACA,MAAMC,QAAQ,GAAG;UACbC,EAAE,EAAET,QAAQ,CAACM,QAAQ,KAAK,UAAU,GAAG,QAAQ,GAC3CN,QAAQ,CAACM,QAAQ,KAAK,YAAY,GAAG,QAAQ,GAAG,QAAQ;UAC5DA,QAAQ,EAAEN,QAAQ,CAACM,QAAQ;UAC3BI,KAAK,EAAE,GAAGV,QAAQ,CAACM,QAAQ,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QACpD,CAAC;;QAED;QACA,MAAMC,SAAS,GAAG,aAAa,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;;QAE5C;QACArC,YAAY,CAACwB,OAAO,CAAC,OAAO,EAAEW,SAAS,CAAC;QACxCpC,QAAQ,CAACoC,SAAS,CAAC;QACnBtC,OAAO,CAACiC,QAAQ,CAAC;QAEjB,OAAO,IAAI;MACf,CAAC,MAAM;QACHzB,QAAQ,CAAC,qBAAqB,CAAC;QAC/B,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC,OAAOS,GAAG,EAAE;MACVT,QAAQ,CAAC,gCAAgC,CAAC;MAC1C,OAAO,KAAK;IAChB;EACJ,CAAC;;EAED;EACA,MAAMe,MAAM,GAAGA,CAAA,KAAM;IACjB;IACApB,YAAY,CAACsC,UAAU,CAAC,OAAO,CAAC;;IAEhC;IACAvC,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;IACbQ,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;;EAED;EACA,MAAMkC,QAAQ,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;IACvC,IAAI;MACA,MAAMpD,KAAK,CAACkC,IAAI,CAAC,iBAAiB,EAAE;QAAEiB,MAAM;QAAEC;MAAO,CAAC,CAAC;MACvD,OAAO,IAAI;IACf,CAAC,CAAC,OAAO3B,GAAG,EAAE;MAAA,IAAA4B,cAAA,EAAAC,mBAAA;MACV1B,OAAO,CAACb,KAAK,CAAC,oBAAoB,EAAE,EAAAsC,cAAA,GAAA5B,GAAG,CAACI,QAAQ,cAAAwB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc7B,IAAI,cAAA8B,mBAAA,uBAAlBA,mBAAA,CAAoBxB,OAAO,KAAIL,GAAG,CAACK,OAAO,CAAC;MAC/E,OAAO,KAAK;IAChB;EACJ,CAAC;;EAED;EACA,MAAMyB,cAAc,GAAG,MAAOJ,MAAM,IAAK;IACrC,IAAI;MACA,MAAMnD,KAAK,CAACkC,IAAI,CAAC,sBAAsB,EAAE;QAAEiB;MAAO,CAAC,CAAC;;MAEpD;MACA,MAAM7B,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,oBAAoB,CAAC;MACjDf,OAAO,CAACc,GAAG,CAACE,IAAI,CAAC;MAEjB,OAAO,IAAI;IACf,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAA+B,cAAA,EAAAC,mBAAA;MACV7B,OAAO,CAACb,KAAK,CAAC,4BAA4B,EAAE,EAAAyC,cAAA,GAAA/B,GAAG,CAACI,QAAQ,cAAA2B,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAchC,IAAI,cAAAiC,mBAAA,uBAAlBA,mBAAA,CAAoB3B,OAAO,KAAIL,GAAG,CAACK,OAAO,CAAC;MACvF,OAAO,KAAK;IAChB;EACJ,CAAC;;EAED;EACA,MAAM4B,UAAU,GAAGA,CAAA,KAAM1C,QAAQ,CAAC,IAAI,CAAC;EAEvC,oBACId,OAAA,CAACC,WAAW,CAACwD,QAAQ;IACjBC,KAAK,EAAE;MACHnD,KAAK;MACLF,IAAI;MACJM,OAAO;MACPE,KAAK;MACLiB,QAAQ;MACRM,KAAK;MACLP,MAAM;MACNmB,QAAQ;MACRK,cAAc;MACdG;IACJ,CAAE;IAAArD,QAAA,EAEDA;EAAQ;IAAAwD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC1D,EAAA,CA9JWF,YAAY;AAAA6D,EAAA,GAAZ7D,YAAY;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}