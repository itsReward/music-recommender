{"ast":null,"code":"var _jsxFileName = \"/home/zeus/Development/music-recommender/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\n// client/src/context/AuthContext.js\nimport React, { createContext, useState } from 'react';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\n  const [error, setError] = useState(null);\n\n  // Mock user data\n  const mockUsers = {\n    'john_doe': {\n      id: 'user_1',\n      username: 'john_doe',\n      email: 'john@example.com',\n      favorites: []\n    },\n    'jane_smith': {\n      id: 'user_2',\n      username: 'jane_smith',\n      email: 'jane@example.com',\n      favorites: []\n    },\n    'alex_rock': {\n      id: 'user_3',\n      username: 'alex_rock',\n      email: 'alex@example.com',\n      favorites: []\n    }\n  };\n\n  // Login user\n  const login = async userData => {\n    try {\n      setError(null);\n\n      // Check if username exists and password is correct\n      if (mockUsers[userData.username] && userData.password === 'password123') {\n        const loggedInUser = mockUsers[userData.username];\n        localStorage.setItem('user', JSON.stringify(loggedInUser));\n        setUser(loggedInUser);\n        return true;\n      } else {\n        setError('Invalid credentials');\n        return false;\n      }\n    } catch (err) {\n      setError('An error occurred');\n      return false;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    setError(null);\n  };\n\n  // Other functions (simplified for demo)\n  const rateSong = async () => true;\n  const addToFavorites = async () => true;\n  const register = async userData => {\n    if (userData.username && userData.password) {\n      const newUser = {\n        id: `user_${Date.now()}`,\n        username: userData.username,\n        email: userData.email || `${userData.username}@example.com`,\n        favorites: []\n      };\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setUser(newUser);\n      return true;\n    }\n    return false;\n  };\n  const clearError = () => setError(null);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      error,\n      register,\n      login,\n      logout,\n      rateSong,\n      addToFavorites,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"iqrm4IjWEHr7PJs06ZZ3aQ/8t0M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","JSON","parse","localStorage","getItem","error","setError","mockUsers","id","username","email","favorites","login","userData","password","loggedInUser","setItem","stringify","err","logout","removeItem","rateSong","addToFavorites","register","newUser","Date","now","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/zeus/Development/music-recommender/client/src/context/AuthContext.js"],"sourcesContent":["// client/src/context/AuthContext.js\nimport React, { createContext, useState } from 'react';\n\n// Create context\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\n    const [error, setError] = useState(null);\n\n    // Mock user data\n    const mockUsers = {\n        'john_doe': {\n            id: 'user_1',\n            username: 'john_doe',\n            email: 'john@example.com',\n            favorites: []\n        },\n        'jane_smith': {\n            id: 'user_2',\n            username: 'jane_smith',\n            email: 'jane@example.com',\n            favorites: []\n        },\n        'alex_rock': {\n            id: 'user_3',\n            username: 'alex_rock',\n            email: 'alex@example.com',\n            favorites: []\n        }\n    };\n\n    // Login user\n    const login = async (userData) => {\n        try {\n            setError(null);\n\n            // Check if username exists and password is correct\n            if (mockUsers[userData.username] && userData.password === 'password123') {\n                const loggedInUser = mockUsers[userData.username];\n                localStorage.setItem('user', JSON.stringify(loggedInUser));\n                setUser(loggedInUser);\n                return true;\n            } else {\n                setError('Invalid credentials');\n                return false;\n            }\n        } catch (err) {\n            setError('An error occurred');\n            return false;\n        }\n    };\n\n    // Logout user\n    const logout = () => {\n        localStorage.removeItem('user');\n        setUser(null);\n        setError(null);\n    };\n\n    // Other functions (simplified for demo)\n    const rateSong = async () => true;\n    const addToFavorites = async () => true;\n    const register = async (userData) => {\n        if (userData.username && userData.password) {\n            const newUser = {\n                id: `user_${Date.now()}`,\n                username: userData.username,\n                email: userData.email || `${userData.username}@example.com`,\n                favorites: []\n            };\n            localStorage.setItem('user', JSON.stringify(newUser));\n            setUser(newUser);\n            return true;\n        }\n        return false;\n    };\n\n    const clearError = () => setError(null);\n\n    return (\n        <AuthContext.Provider\n            value={{\n                user,\n                error,\n                register,\n                login,\n                logout,\n                rateSong,\n                addToFavorites,\n                clearError\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}